[gd_scene load_steps=8 format=3 uid="uid://b2sgxo5hdhspu"]

[ext_resource type="Script" path="res://dialog_overlay.gd" id="1_njyyi"]
[ext_resource type="PackedScene" uid="uid://drfotb3x71acu" path="res://text_script.tscn" id="2_naldu"]

[sub_resource type="Animation" id="Animation_umy8r"]
resource_name = "boring_script"
length = 6.0
tracks/0/type = "method"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("BoringScript")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0.866667),
"transitions": PackedFloat32Array(1),
"values": [{
"args": [],
"method": &"next"
}]
}

[sub_resource type="Animation" id="Animation_uv4bo"]
resource_name = "dream_script"
length = 6.0
tracks/0/type = "method"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("DreamScript")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(1.1, 2.86667),
"transitions": PackedFloat32Array(1, 1),
"values": [{
"args": [],
"method": &"next"
}, {
"args": [],
"method": &"next"
}]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_nv8is"]
_data = {
"boring_script": SubResource("Animation_umy8r"),
"dream_script": SubResource("Animation_uv4bo")
}

[sub_resource type="GDScript" id="GDScript_r8r2l"]
script/source = "extends Node

@onready var script_lines = FileAccess.open(self.get_meta(\"script_file\"), FileAccess.READ).get_as_text().split(\"\\n\")
var index = 0

signal new_line(from: String, line: String)

func next() -> void:
	print(\"next\")
	assert(index < script_lines.size())
	print(\"emitting\")
	new_line.emit(self.get_meta(\"boring_or_dream\"), script_lines[index])
	index += 1

# Called when the node enters the scene tree for the first time.
func _ready() -> void:
	pass # Replace with function body.


# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta: float) -> void:
	pass
"

[sub_resource type="GDScript" id="GDScript_wnuqp"]
script/source = "extends Node

@onready var script_lines = FileAccess.open(self.get_meta(\"script_file\"), FileAccess.READ).get_as_text().split(\"\\n\")
var index = 0

signal new_line(from: String, line: String)

func next() -> void:
	print(\"next\")
	assert(index < script_lines.size())
	print(\"emitting\")
	new_line.emit(self.get_meta(\"boring_or_dream\"), script_lines[index])
	index += 1

# Called when the node enters the scene tree for the first time.
func _ready() -> void:
	pass # Replace with function body.


# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta: float) -> void:
	pass
"

[node name="DialogOverlay" type="CanvasLayer"]
script = ExtResource("1_njyyi")
metadata/test = ""

[node name="BoringAnimationPlayer" type="AnimationPlayer" parent="."]
libraries = {
"": SubResource("AnimationLibrary_nv8is")
}

[node name="DreamAnimationPlayer" type="AnimationPlayer" parent="."]
libraries = {
"": SubResource("AnimationLibrary_nv8is")
}

[node name="DreamScript" parent="." instance=ExtResource("2_naldu")]
script = SubResource("GDScript_r8r2l")
metadata/script_file = "res://dream_script.txt"
metadata/boring_or_dream = "dream"

[node name="BoringScript" parent="." instance=ExtResource("2_naldu")]
script = SubResource("GDScript_wnuqp")
metadata/script_file = "res://boring_script.txt"
metadata/boring_or_dream = "boring"

[node name="RichTextLabel" type="RichTextLabel" parent="."]
offset_left = 116.0
offset_top = 130.0
offset_right = 974.0
offset_bottom = 522.0
bbcode_enabled = true

[connection signal="animation_finished" from="BoringAnimationPlayer" to="." method="_on_animation_player_animation_finished"]
[connection signal="animation_finished" from="DreamAnimationPlayer" to="." method="_on_animation_player_animation_finished"]
[connection signal="new_line" from="DreamScript" to="." method="_on_script_new_line"]
[connection signal="new_line" from="BoringScript" to="." method="_on_script_new_line"]
